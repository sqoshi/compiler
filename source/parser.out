Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOWNTO
    ENDFOR
    FOR
    FROM
    TO

Grammar

Rule 0     S' -> program
Rule 1     program -> DECLARE declarations BEGIN commands END
Rule 2     program -> BEGIN commands END
Rule 3     declarations -> declarations COMMA ID
Rule 4     declarations -> declarations COMMA ID LBR NUM COLON NUM RBR
Rule 5     declarations -> ID
Rule 6     declarations -> ID LBR NUM COLON NUM RBR
Rule 7     commands -> commands command
Rule 8     commands -> command
Rule 9     command -> identifier ASSIGN expression SEMICOLON
Rule 10    command -> READ identifier SEMICOLON
Rule 11    command -> WRITE identifier SEMICOLON
Rule 12    command -> IF condition THEN commands ENDIF
Rule 13    command -> IF condition THEN commands ELSE commands ENDIF
Rule 14    command -> WHILE condition DO commands ENDWHILE
Rule 15    command -> REPEAT commands UNTIL condition SEMICOLON
Rule 16    expression -> value
Rule 17    expression -> value PLUS value
Rule 18    expression -> value MINUS value
Rule 19    expression -> value MULT value
Rule 20    expression -> value DIV value
Rule 21    expression -> value MOD value
Rule 22    condition -> value GT value
Rule 23    condition -> value LT value
Rule 24    condition -> value GEQ value
Rule 25    condition -> value LEQ value
Rule 26    condition -> value EQ value
Rule 27    condition -> value NEQ value
Rule 28    value -> NUM
Rule 29    value -> identifier
Rule 30    identifier -> ID
Rule 31    identifier -> ID LBR ID RBR
Rule 32    identifier -> ID LBR NUM RBR

Terminals, with rules where they appear

ASSIGN               : 9
BEGIN                : 1 2
COLON                : 4 6
COMMA                : 3 4
DECLARE              : 1
DIV                  : 20
DO                   : 14
DOWNTO               : 
ELSE                 : 13
END                  : 1 2
ENDFOR               : 
ENDIF                : 12 13
ENDWHILE             : 14
EQ                   : 26
FOR                  : 
FROM                 : 
GEQ                  : 24
GT                   : 22
ID                   : 3 4 5 6 30 31 31 32
IF                   : 12 13
LBR                  : 4 6 31 32
LEQ                  : 25
LT                   : 23
MINUS                : 18
MOD                  : 21
MULT                 : 19
NEQ                  : 27
NUM                  : 4 4 6 6 28 32
PLUS                 : 17
RBR                  : 4 6 31 32
READ                 : 10
REPEAT               : 15
SEMICOLON            : 9 10 11 15
THEN                 : 12 13
TO                   : 
UNTIL                : 15
WHILE                : 14
WRITE                : 11
error                : 

Nonterminals, with rules where they appear

command              : 7 8
commands             : 1 2 7 12 13 13 14 15
condition            : 12 13 14 15
declarations         : 1 3 4
expression           : 9
identifier           : 9 10 11 29
program              : 0
value                : 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . DECLARE declarations BEGIN commands END
    (2) program -> . BEGIN commands END

    DECLARE         shift and go to state 2
    BEGIN           shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> DECLARE . declarations BEGIN commands END
    (3) declarations -> . declarations COMMA ID
    (4) declarations -> . declarations COMMA ID LBR NUM COLON NUM RBR
    (5) declarations -> . ID
    (6) declarations -> . ID LBR NUM COLON NUM RBR

    ID              shift and go to state 5

    declarations                   shift and go to state 4

state 3

    (2) program -> BEGIN . commands END
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    commands                       shift and go to state 6
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 4

    (1) program -> DECLARE declarations . BEGIN commands END
    (3) declarations -> declarations . COMMA ID
    (4) declarations -> declarations . COMMA ID LBR NUM COLON NUM RBR

    BEGIN           shift and go to state 15
    COMMA           shift and go to state 16


state 5

    (5) declarations -> ID .
    (6) declarations -> ID . LBR NUM COLON NUM RBR

    BEGIN           reduce using rule 5 (declarations -> ID .)
    COMMA           reduce using rule 5 (declarations -> ID .)
    LBR             shift and go to state 17


state 6

    (2) program -> BEGIN commands . END
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    END             shift and go to state 18
    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    command                        shift and go to state 19
    identifier                     shift and go to state 8

state 7

    (8) commands -> command .

    END             reduce using rule 8 (commands -> command .)
    READ            reduce using rule 8 (commands -> command .)
    WRITE           reduce using rule 8 (commands -> command .)
    IF              reduce using rule 8 (commands -> command .)
    WHILE           reduce using rule 8 (commands -> command .)
    REPEAT          reduce using rule 8 (commands -> command .)
    ID              reduce using rule 8 (commands -> command .)
    UNTIL           reduce using rule 8 (commands -> command .)
    ENDIF           reduce using rule 8 (commands -> command .)
    ELSE            reduce using rule 8 (commands -> command .)
    ENDWHILE        reduce using rule 8 (commands -> command .)


state 8

    (9) command -> identifier . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 20


state 9

    (10) command -> READ . identifier SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    ID              shift and go to state 14

    identifier                     shift and go to state 21

state 10

    (11) command -> WRITE . identifier SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    ID              shift and go to state 14

    identifier                     shift and go to state 22

state 11

    (12) command -> IF . condition THEN commands ENDIF
    (13) command -> IF . condition THEN commands ELSE commands ENDIF
    (22) condition -> . value GT value
    (23) condition -> . value LT value
    (24) condition -> . value GEQ value
    (25) condition -> . value LEQ value
    (26) condition -> . value EQ value
    (27) condition -> . value NEQ value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    condition                      shift and go to state 23
    value                          shift and go to state 24
    identifier                     shift and go to state 26

state 12

    (14) command -> WHILE . condition DO commands ENDWHILE
    (22) condition -> . value GT value
    (23) condition -> . value LT value
    (24) condition -> . value GEQ value
    (25) condition -> . value LEQ value
    (26) condition -> . value EQ value
    (27) condition -> . value NEQ value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    condition                      shift and go to state 27
    value                          shift and go to state 24
    identifier                     shift and go to state 26

state 13

    (15) command -> REPEAT . commands UNTIL condition SEMICOLON
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    commands                       shift and go to state 28
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 14

    (30) identifier -> ID .
    (31) identifier -> ID . LBR ID RBR
    (32) identifier -> ID . LBR NUM RBR

    ASSIGN          reduce using rule 30 (identifier -> ID .)
    SEMICOLON       reduce using rule 30 (identifier -> ID .)
    GT              reduce using rule 30 (identifier -> ID .)
    LT              reduce using rule 30 (identifier -> ID .)
    GEQ             reduce using rule 30 (identifier -> ID .)
    LEQ             reduce using rule 30 (identifier -> ID .)
    EQ              reduce using rule 30 (identifier -> ID .)
    NEQ             reduce using rule 30 (identifier -> ID .)
    PLUS            reduce using rule 30 (identifier -> ID .)
    MINUS           reduce using rule 30 (identifier -> ID .)
    MULT            reduce using rule 30 (identifier -> ID .)
    DIV             reduce using rule 30 (identifier -> ID .)
    MOD             reduce using rule 30 (identifier -> ID .)
    THEN            reduce using rule 30 (identifier -> ID .)
    DO              reduce using rule 30 (identifier -> ID .)
    LBR             shift and go to state 29


state 15

    (1) program -> DECLARE declarations BEGIN . commands END
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    commands                       shift and go to state 30
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 16

    (3) declarations -> declarations COMMA . ID
    (4) declarations -> declarations COMMA . ID LBR NUM COLON NUM RBR

    ID              shift and go to state 31


state 17

    (6) declarations -> ID LBR . NUM COLON NUM RBR

    NUM             shift and go to state 32


state 18

    (2) program -> BEGIN commands END .

    $end            reduce using rule 2 (program -> BEGIN commands END .)


state 19

    (7) commands -> commands command .

    END             reduce using rule 7 (commands -> commands command .)
    READ            reduce using rule 7 (commands -> commands command .)
    WRITE           reduce using rule 7 (commands -> commands command .)
    IF              reduce using rule 7 (commands -> commands command .)
    WHILE           reduce using rule 7 (commands -> commands command .)
    REPEAT          reduce using rule 7 (commands -> commands command .)
    ID              reduce using rule 7 (commands -> commands command .)
    UNTIL           reduce using rule 7 (commands -> commands command .)
    ENDIF           reduce using rule 7 (commands -> commands command .)
    ELSE            reduce using rule 7 (commands -> commands command .)
    ENDWHILE        reduce using rule 7 (commands -> commands command .)


state 20

    (9) command -> identifier ASSIGN . expression SEMICOLON
    (16) expression -> . value
    (17) expression -> . value PLUS value
    (18) expression -> . value MINUS value
    (19) expression -> . value MULT value
    (20) expression -> . value DIV value
    (21) expression -> . value MOD value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    identifier                     shift and go to state 26
    expression                     shift and go to state 33
    value                          shift and go to state 34

state 21

    (10) command -> READ identifier . SEMICOLON

    SEMICOLON       shift and go to state 35


state 22

    (11) command -> WRITE identifier . SEMICOLON

    SEMICOLON       shift and go to state 36


state 23

    (12) command -> IF condition . THEN commands ENDIF
    (13) command -> IF condition . THEN commands ELSE commands ENDIF

    THEN            shift and go to state 37


state 24

    (22) condition -> value . GT value
    (23) condition -> value . LT value
    (24) condition -> value . GEQ value
    (25) condition -> value . LEQ value
    (26) condition -> value . EQ value
    (27) condition -> value . NEQ value

    GT              shift and go to state 38
    LT              shift and go to state 39
    GEQ             shift and go to state 40
    LEQ             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43


state 25

    (28) value -> NUM .

    GT              reduce using rule 28 (value -> NUM .)
    LT              reduce using rule 28 (value -> NUM .)
    GEQ             reduce using rule 28 (value -> NUM .)
    LEQ             reduce using rule 28 (value -> NUM .)
    EQ              reduce using rule 28 (value -> NUM .)
    NEQ             reduce using rule 28 (value -> NUM .)
    PLUS            reduce using rule 28 (value -> NUM .)
    MINUS           reduce using rule 28 (value -> NUM .)
    MULT            reduce using rule 28 (value -> NUM .)
    DIV             reduce using rule 28 (value -> NUM .)
    MOD             reduce using rule 28 (value -> NUM .)
    SEMICOLON       reduce using rule 28 (value -> NUM .)
    THEN            reduce using rule 28 (value -> NUM .)
    DO              reduce using rule 28 (value -> NUM .)


state 26

    (29) value -> identifier .

    GT              reduce using rule 29 (value -> identifier .)
    LT              reduce using rule 29 (value -> identifier .)
    GEQ             reduce using rule 29 (value -> identifier .)
    LEQ             reduce using rule 29 (value -> identifier .)
    EQ              reduce using rule 29 (value -> identifier .)
    NEQ             reduce using rule 29 (value -> identifier .)
    PLUS            reduce using rule 29 (value -> identifier .)
    MINUS           reduce using rule 29 (value -> identifier .)
    MULT            reduce using rule 29 (value -> identifier .)
    DIV             reduce using rule 29 (value -> identifier .)
    MOD             reduce using rule 29 (value -> identifier .)
    SEMICOLON       reduce using rule 29 (value -> identifier .)
    THEN            reduce using rule 29 (value -> identifier .)
    DO              reduce using rule 29 (value -> identifier .)


state 27

    (14) command -> WHILE condition . DO commands ENDWHILE

    DO              shift and go to state 44


state 28

    (15) command -> REPEAT commands . UNTIL condition SEMICOLON
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    UNTIL           shift and go to state 45
    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    command                        shift and go to state 19
    identifier                     shift and go to state 8

state 29

    (31) identifier -> ID LBR . ID RBR
    (32) identifier -> ID LBR . NUM RBR

    ID              shift and go to state 46
    NUM             shift and go to state 47


state 30

    (1) program -> DECLARE declarations BEGIN commands . END
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    END             shift and go to state 48
    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    command                        shift and go to state 19
    identifier                     shift and go to state 8

state 31

    (3) declarations -> declarations COMMA ID .
    (4) declarations -> declarations COMMA ID . LBR NUM COLON NUM RBR

    BEGIN           reduce using rule 3 (declarations -> declarations COMMA ID .)
    COMMA           reduce using rule 3 (declarations -> declarations COMMA ID .)
    LBR             shift and go to state 49


state 32

    (6) declarations -> ID LBR NUM . COLON NUM RBR

    COLON           shift and go to state 50


state 33

    (9) command -> identifier ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 51


state 34

    (16) expression -> value .
    (17) expression -> value . PLUS value
    (18) expression -> value . MINUS value
    (19) expression -> value . MULT value
    (20) expression -> value . DIV value
    (21) expression -> value . MOD value

    SEMICOLON       reduce using rule 16 (expression -> value .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    MULT            shift and go to state 54
    DIV             shift and go to state 55
    MOD             shift and go to state 56


state 35

    (10) command -> READ identifier SEMICOLON .

    END             reduce using rule 10 (command -> READ identifier SEMICOLON .)
    READ            reduce using rule 10 (command -> READ identifier SEMICOLON .)
    WRITE           reduce using rule 10 (command -> READ identifier SEMICOLON .)
    IF              reduce using rule 10 (command -> READ identifier SEMICOLON .)
    WHILE           reduce using rule 10 (command -> READ identifier SEMICOLON .)
    REPEAT          reduce using rule 10 (command -> READ identifier SEMICOLON .)
    ID              reduce using rule 10 (command -> READ identifier SEMICOLON .)
    UNTIL           reduce using rule 10 (command -> READ identifier SEMICOLON .)
    ENDIF           reduce using rule 10 (command -> READ identifier SEMICOLON .)
    ELSE            reduce using rule 10 (command -> READ identifier SEMICOLON .)
    ENDWHILE        reduce using rule 10 (command -> READ identifier SEMICOLON .)


state 36

    (11) command -> WRITE identifier SEMICOLON .

    END             reduce using rule 11 (command -> WRITE identifier SEMICOLON .)
    READ            reduce using rule 11 (command -> WRITE identifier SEMICOLON .)
    WRITE           reduce using rule 11 (command -> WRITE identifier SEMICOLON .)
    IF              reduce using rule 11 (command -> WRITE identifier SEMICOLON .)
    WHILE           reduce using rule 11 (command -> WRITE identifier SEMICOLON .)
    REPEAT          reduce using rule 11 (command -> WRITE identifier SEMICOLON .)
    ID              reduce using rule 11 (command -> WRITE identifier SEMICOLON .)
    UNTIL           reduce using rule 11 (command -> WRITE identifier SEMICOLON .)
    ENDIF           reduce using rule 11 (command -> WRITE identifier SEMICOLON .)
    ELSE            reduce using rule 11 (command -> WRITE identifier SEMICOLON .)
    ENDWHILE        reduce using rule 11 (command -> WRITE identifier SEMICOLON .)


state 37

    (12) command -> IF condition THEN . commands ENDIF
    (13) command -> IF condition THEN . commands ELSE commands ENDIF
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    commands                       shift and go to state 57
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 38

    (22) condition -> value GT . value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    value                          shift and go to state 58
    identifier                     shift and go to state 26

state 39

    (23) condition -> value LT . value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    value                          shift and go to state 59
    identifier                     shift and go to state 26

state 40

    (24) condition -> value GEQ . value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    value                          shift and go to state 60
    identifier                     shift and go to state 26

state 41

    (25) condition -> value LEQ . value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    value                          shift and go to state 61
    identifier                     shift and go to state 26

state 42

    (26) condition -> value EQ . value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    value                          shift and go to state 62
    identifier                     shift and go to state 26

state 43

    (27) condition -> value NEQ . value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    value                          shift and go to state 63
    identifier                     shift and go to state 26

state 44

    (14) command -> WHILE condition DO . commands ENDWHILE
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    commands                       shift and go to state 64
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 45

    (15) command -> REPEAT commands UNTIL . condition SEMICOLON
    (22) condition -> . value GT value
    (23) condition -> . value LT value
    (24) condition -> . value GEQ value
    (25) condition -> . value LEQ value
    (26) condition -> . value EQ value
    (27) condition -> . value NEQ value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    condition                      shift and go to state 65
    value                          shift and go to state 24
    identifier                     shift and go to state 26

state 46

    (31) identifier -> ID LBR ID . RBR

    RBR             shift and go to state 66


state 47

    (32) identifier -> ID LBR NUM . RBR

    RBR             shift and go to state 67


state 48

    (1) program -> DECLARE declarations BEGIN commands END .

    $end            reduce using rule 1 (program -> DECLARE declarations BEGIN commands END .)


state 49

    (4) declarations -> declarations COMMA ID LBR . NUM COLON NUM RBR

    NUM             shift and go to state 68


state 50

    (6) declarations -> ID LBR NUM COLON . NUM RBR

    NUM             shift and go to state 69


state 51

    (9) command -> identifier ASSIGN expression SEMICOLON .

    END             reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    READ            reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    IF              reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    REPEAT          reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    ID              reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    UNTIL           reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDIF           reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDWHILE        reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)


state 52

    (17) expression -> value PLUS . value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    value                          shift and go to state 70
    identifier                     shift and go to state 26

state 53

    (18) expression -> value MINUS . value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    value                          shift and go to state 71
    identifier                     shift and go to state 26

state 54

    (19) expression -> value MULT . value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    value                          shift and go to state 72
    identifier                     shift and go to state 26

state 55

    (20) expression -> value DIV . value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    value                          shift and go to state 73
    identifier                     shift and go to state 26

state 56

    (21) expression -> value MOD . value
    (28) value -> . NUM
    (29) value -> . identifier
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 25
    ID              shift and go to state 14

    value                          shift and go to state 74
    identifier                     shift and go to state 26

state 57

    (12) command -> IF condition THEN commands . ENDIF
    (13) command -> IF condition THEN commands . ELSE commands ENDIF
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    ENDIF           shift and go to state 75
    ELSE            shift and go to state 76
    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    command                        shift and go to state 19
    identifier                     shift and go to state 8

state 58

    (22) condition -> value GT value .

    THEN            reduce using rule 22 (condition -> value GT value .)
    DO              reduce using rule 22 (condition -> value GT value .)
    SEMICOLON       reduce using rule 22 (condition -> value GT value .)


state 59

    (23) condition -> value LT value .

    THEN            reduce using rule 23 (condition -> value LT value .)
    DO              reduce using rule 23 (condition -> value LT value .)
    SEMICOLON       reduce using rule 23 (condition -> value LT value .)


state 60

    (24) condition -> value GEQ value .

    THEN            reduce using rule 24 (condition -> value GEQ value .)
    DO              reduce using rule 24 (condition -> value GEQ value .)
    SEMICOLON       reduce using rule 24 (condition -> value GEQ value .)


state 61

    (25) condition -> value LEQ value .

    THEN            reduce using rule 25 (condition -> value LEQ value .)
    DO              reduce using rule 25 (condition -> value LEQ value .)
    SEMICOLON       reduce using rule 25 (condition -> value LEQ value .)


state 62

    (26) condition -> value EQ value .

    THEN            reduce using rule 26 (condition -> value EQ value .)
    DO              reduce using rule 26 (condition -> value EQ value .)
    SEMICOLON       reduce using rule 26 (condition -> value EQ value .)


state 63

    (27) condition -> value NEQ value .

    THEN            reduce using rule 27 (condition -> value NEQ value .)
    DO              reduce using rule 27 (condition -> value NEQ value .)
    SEMICOLON       reduce using rule 27 (condition -> value NEQ value .)


state 64

    (14) command -> WHILE condition DO commands . ENDWHILE
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    ENDWHILE        shift and go to state 77
    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    command                        shift and go to state 19
    identifier                     shift and go to state 8

state 65

    (15) command -> REPEAT commands UNTIL condition . SEMICOLON

    SEMICOLON       shift and go to state 78


state 66

    (31) identifier -> ID LBR ID RBR .

    ASSIGN          reduce using rule 31 (identifier -> ID LBR ID RBR .)
    SEMICOLON       reduce using rule 31 (identifier -> ID LBR ID RBR .)
    GT              reduce using rule 31 (identifier -> ID LBR ID RBR .)
    LT              reduce using rule 31 (identifier -> ID LBR ID RBR .)
    GEQ             reduce using rule 31 (identifier -> ID LBR ID RBR .)
    LEQ             reduce using rule 31 (identifier -> ID LBR ID RBR .)
    EQ              reduce using rule 31 (identifier -> ID LBR ID RBR .)
    NEQ             reduce using rule 31 (identifier -> ID LBR ID RBR .)
    PLUS            reduce using rule 31 (identifier -> ID LBR ID RBR .)
    MINUS           reduce using rule 31 (identifier -> ID LBR ID RBR .)
    MULT            reduce using rule 31 (identifier -> ID LBR ID RBR .)
    DIV             reduce using rule 31 (identifier -> ID LBR ID RBR .)
    MOD             reduce using rule 31 (identifier -> ID LBR ID RBR .)
    THEN            reduce using rule 31 (identifier -> ID LBR ID RBR .)
    DO              reduce using rule 31 (identifier -> ID LBR ID RBR .)


state 67

    (32) identifier -> ID LBR NUM RBR .

    ASSIGN          reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    SEMICOLON       reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    GT              reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    LT              reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    GEQ             reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    LEQ             reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    EQ              reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    NEQ             reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    PLUS            reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    MINUS           reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    MULT            reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    DIV             reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    MOD             reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    THEN            reduce using rule 32 (identifier -> ID LBR NUM RBR .)
    DO              reduce using rule 32 (identifier -> ID LBR NUM RBR .)


state 68

    (4) declarations -> declarations COMMA ID LBR NUM . COLON NUM RBR

    COLON           shift and go to state 79


state 69

    (6) declarations -> ID LBR NUM COLON NUM . RBR

    RBR             shift and go to state 80


state 70

    (17) expression -> value PLUS value .

    SEMICOLON       reduce using rule 17 (expression -> value PLUS value .)


state 71

    (18) expression -> value MINUS value .

    SEMICOLON       reduce using rule 18 (expression -> value MINUS value .)


state 72

    (19) expression -> value MULT value .

    SEMICOLON       reduce using rule 19 (expression -> value MULT value .)


state 73

    (20) expression -> value DIV value .

    SEMICOLON       reduce using rule 20 (expression -> value DIV value .)


state 74

    (21) expression -> value MOD value .

    SEMICOLON       reduce using rule 21 (expression -> value MOD value .)


state 75

    (12) command -> IF condition THEN commands ENDIF .

    END             reduce using rule 12 (command -> IF condition THEN commands ENDIF .)
    READ            reduce using rule 12 (command -> IF condition THEN commands ENDIF .)
    WRITE           reduce using rule 12 (command -> IF condition THEN commands ENDIF .)
    IF              reduce using rule 12 (command -> IF condition THEN commands ENDIF .)
    WHILE           reduce using rule 12 (command -> IF condition THEN commands ENDIF .)
    REPEAT          reduce using rule 12 (command -> IF condition THEN commands ENDIF .)
    ID              reduce using rule 12 (command -> IF condition THEN commands ENDIF .)
    UNTIL           reduce using rule 12 (command -> IF condition THEN commands ENDIF .)
    ENDIF           reduce using rule 12 (command -> IF condition THEN commands ENDIF .)
    ELSE            reduce using rule 12 (command -> IF condition THEN commands ENDIF .)
    ENDWHILE        reduce using rule 12 (command -> IF condition THEN commands ENDIF .)


state 76

    (13) command -> IF condition THEN commands ELSE . commands ENDIF
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    commands                       shift and go to state 81
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 77

    (14) command -> WHILE condition DO commands ENDWHILE .

    END             reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    READ            reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    WRITE           reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    IF              reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    WHILE           reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    REPEAT          reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    ID              reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    UNTIL           reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    ENDIF           reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    ELSE            reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)
    ENDWHILE        reduce using rule 14 (command -> WHILE condition DO commands ENDWHILE .)


state 78

    (15) command -> REPEAT commands UNTIL condition SEMICOLON .

    END             reduce using rule 15 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    READ            reduce using rule 15 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    WRITE           reduce using rule 15 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    IF              reduce using rule 15 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    WHILE           reduce using rule 15 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    REPEAT          reduce using rule 15 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    ID              reduce using rule 15 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    UNTIL           reduce using rule 15 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    ENDIF           reduce using rule 15 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    ELSE            reduce using rule 15 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    ENDWHILE        reduce using rule 15 (command -> REPEAT commands UNTIL condition SEMICOLON .)


state 79

    (4) declarations -> declarations COMMA ID LBR NUM COLON . NUM RBR

    NUM             shift and go to state 82


state 80

    (6) declarations -> ID LBR NUM COLON NUM RBR .

    BEGIN           reduce using rule 6 (declarations -> ID LBR NUM COLON NUM RBR .)
    COMMA           reduce using rule 6 (declarations -> ID LBR NUM COLON NUM RBR .)


state 81

    (13) command -> IF condition THEN commands ELSE commands . ENDIF
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . READ identifier SEMICOLON
    (11) command -> . WRITE identifier SEMICOLON
    (12) command -> . IF condition THEN commands ENDIF
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . WHILE condition DO commands ENDWHILE
    (15) command -> . REPEAT commands UNTIL condition SEMICOLON
    (30) identifier -> . ID
    (31) identifier -> . ID LBR ID RBR
    (32) identifier -> . ID LBR NUM RBR

    ENDIF           shift and go to state 83
    READ            shift and go to state 9
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    ID              shift and go to state 14

    command                        shift and go to state 19
    identifier                     shift and go to state 8

state 82

    (4) declarations -> declarations COMMA ID LBR NUM COLON NUM . RBR

    RBR             shift and go to state 84


state 83

    (13) command -> IF condition THEN commands ELSE commands ENDIF .

    END             reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    READ            reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WRITE           reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    IF              reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WHILE           reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    REPEAT          reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ID              reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    UNTIL           reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDIF           reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ELSE            reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDWHILE        reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)


state 84

    (4) declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .

    BEGIN           reduce using rule 4 (declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .)
    COMMA           reduce using rule 4 (declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .)

