def p_expression_division(p):
    """expression   : value DIV value"""
    v1 = get_value(p[1], 'd', p.lineno(1), 'c')
    v2 = get_value(p[3], 'c', p.lineno(3), 'b')
    m1, m2, m3, m4, m5, m6 = get_marks(6)
    p[0] = pack(v1 + v2 +
                cmd('reset', 'a') +
                cmd('jzero', 'c', jump_label[m1]) +
                cmd('jzero', 'd', jump_label[m1]) +
                cmd('reset', 'e') +
                cmd('reset', 'f') +
                cmd('reset', 'b') +
                cmd('add', 'b', 'c') +
                m3 + cmd('reset', 'e') +
                cmd('add', 'e', 'c') +
                cmd('sub', 'e', 'd') +
                cmd('jzero', 'e', jump_label[m5]) +
                cmd('jump', jump_label[m1]) +
                m5 + cmd('reset', 'f') +
                cmd('inc', 'f') +
                cmd('shl', 'c') +
                m4 + cmd('reset', 'e') +
                cmd('add', 'e', 'c') +
                cmd('sub', 'e', 'd') +
                cmd('jzero', 'e', jump_label[m6]) +
                cmd('jump', jump_label[m2]) +
                m6 + cmd('shl', 'f') +
                cmd('shl', 'c') +
                cmd('jump', jump_label[m4]) +
                m2+cmd('add', 'a', 'f') +
                cmd('reset', 'f') +
                cmd('shr', 'c') +
                cmd('sub', 'd', 'c') +
                cmd('reset', 'c') +
                cmd('add', 'c', 'b') +
                cmd('jump', jump_label[m3]) +
                m1, '<<div>>')
