
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BEGIN COLON COMMA DECLARE DIV DO DOWNTO ELSE END ENDFOR ENDIF ENDWHILE EQ FOR FROM GEQ GT ID IF LBR LEQ LT MINUS MOD MULT NEQ NUM PLUS RBR READ REPEAT SEMICOLON THEN TO UNTIL WHILE WRITEprogram  : DECLARE declarations BEGIN commands ENDprogram  : BEGIN commands ENDdeclarations : declarations COMMA IDdeclarations : declarations COMMA ID LBR NUM COLON NUM RBRdeclarations : IDdeclarations : ID LBR NUM COLON NUM RBRcommands : commands commandcommands : commandcommand  : identifier ASSIGN expression SEMICOLONcommand\t: WRITE value SEMICOLON command\t: READ identifier SEMICOLON command\t: WHILE condition DO commands ENDWHILEcommand\t: REPEAT commands UNTIL condition SEMICOLONcommand\t: IF condition THEN commands ENDIFcommand\t: IF condition THEN commands ELSE commands ENDIFiterator\t: ID command  : FOR iterator FROM value TO value DO commands ENDFORcommand  : FOR iterator FROM value DOWNTO value DO commands ENDFORexpression   : valueexpression   : value PLUS valueexpression   : value MINUS valueexpression   : value MULT valueexpression   : value DIV valuecondition   : value GT valuecondition   : value LT valuecondition   : value GEQ valuecondition   : value LEQ valuecondition   : value EQ valuecondition   : value NEQ valuevalue    : NUM value    : identifier identifier\t: ID identifier   : ID LBR ID RBR identifier\t: ID LBR NUM RBR '
    
_lr_action_items = {'DECLARE':([0,],[2,]),'BEGIN':([0,4,5,34,85,93,],[3,16,-5,-3,-6,-4,]),'$end':([1,19,52,],[0,-2,-1,]),'ID':([2,3,6,7,9,10,11,12,13,14,16,17,20,21,28,32,33,38,39,40,41,42,43,44,45,46,47,48,49,55,56,57,58,59,60,68,78,79,80,81,82,83,86,90,91,92,94,95,96,97,],[5,15,15,-8,15,15,15,15,15,31,15,34,-7,15,15,50,15,-10,-11,15,15,15,15,15,15,15,15,15,15,-9,15,15,15,15,15,15,-12,-13,-14,15,15,15,15,-15,15,15,15,15,-17,-18,]),'WRITE':([3,6,7,12,16,20,28,33,38,39,40,48,55,60,68,78,79,80,81,86,90,91,92,94,95,96,97,],[9,9,-8,9,9,-7,9,9,-10,-11,9,9,-9,9,9,-12,-13,-14,9,9,-15,9,9,9,9,-17,-18,]),'READ':([3,6,7,12,16,20,28,33,38,39,40,48,55,60,68,78,79,80,81,86,90,91,92,94,95,96,97,],[10,10,-8,10,10,-7,10,10,-10,-11,10,10,-9,10,10,-12,-13,-14,10,10,-15,10,10,10,10,-17,-18,]),'WHILE':([3,6,7,12,16,20,28,33,38,39,40,48,55,60,68,78,79,80,81,86,90,91,92,94,95,96,97,],[11,11,-8,11,11,-7,11,11,-10,-11,11,11,-9,11,11,-12,-13,-14,11,11,-15,11,11,11,11,-17,-18,]),'REPEAT':([3,6,7,12,16,20,28,33,38,39,40,48,55,60,68,78,79,80,81,86,90,91,92,94,95,96,97,],[12,12,-8,12,12,-7,12,12,-10,-11,12,12,-9,12,12,-12,-13,-14,12,12,-15,12,12,12,12,-17,-18,]),'IF':([3,6,7,12,16,20,28,33,38,39,40,48,55,60,68,78,79,80,81,86,90,91,92,94,95,96,97,],[13,13,-8,13,13,-7,13,13,-10,-11,13,13,-9,13,13,-12,-13,-14,13,13,-15,13,13,13,13,-17,-18,]),'FOR':([3,6,7,12,16,20,28,33,38,39,40,48,55,60,68,78,79,80,81,86,90,91,92,94,95,96,97,],[14,14,-8,14,14,-7,14,14,-10,-11,14,14,-9,14,14,-12,-13,-14,14,14,-15,14,14,14,14,-17,-18,]),'COMMA':([4,5,34,85,93,],[17,-5,-3,-6,-4,]),'LBR':([5,15,34,],[18,32,53,]),'END':([6,7,20,33,38,39,55,78,79,80,90,96,97,],[19,-8,-7,52,-10,-11,-9,-12,-13,-14,-15,-17,-18,]),'UNTIL':([7,20,28,38,39,55,78,79,80,90,96,97,],[-8,-7,47,-10,-11,-9,-12,-13,-14,-15,-17,-18,]),'ENDWHILE':([7,20,38,39,55,60,78,79,80,90,96,97,],[-8,-7,-10,-11,-9,78,-12,-13,-14,-15,-17,-18,]),'ENDIF':([7,20,38,39,55,68,78,79,80,86,90,96,97,],[-8,-7,-10,-11,-9,80,-12,-13,-14,90,-15,-17,-18,]),'ELSE':([7,20,38,39,55,68,78,79,80,90,96,97,],[-8,-7,-10,-11,-9,81,-12,-13,-14,-15,-17,-18,]),'ENDFOR':([7,20,38,39,55,78,79,80,90,94,95,96,97,],[-8,-7,-10,-11,-9,-12,-13,-14,-15,96,97,-17,-18,]),'ASSIGN':([8,15,70,71,],[21,-32,-33,-34,]),'NUM':([9,11,13,18,21,32,41,42,43,44,45,46,47,49,53,54,56,57,58,59,82,83,84,],[23,23,23,35,23,51,23,23,23,23,23,23,23,23,72,73,23,23,23,23,23,23,89,]),'SEMICOLON':([15,22,23,24,25,36,37,61,62,63,64,65,66,67,70,71,74,75,76,77,],[-32,38,-30,-31,39,55,-19,-24,-25,-26,-27,-28,-29,79,-33,-34,-20,-21,-22,-23,]),'GT':([15,23,24,27,70,71,],[-32,-30,-31,41,-33,-34,]),'LT':([15,23,24,27,70,71,],[-32,-30,-31,42,-33,-34,]),'GEQ':([15,23,24,27,70,71,],[-32,-30,-31,43,-33,-34,]),'LEQ':([15,23,24,27,70,71,],[-32,-30,-31,44,-33,-34,]),'EQ':([15,23,24,27,70,71,],[-32,-30,-31,45,-33,-34,]),'NEQ':([15,23,24,27,70,71,],[-32,-30,-31,46,-33,-34,]),'PLUS':([15,23,24,37,70,71,],[-32,-30,-31,56,-33,-34,]),'MINUS':([15,23,24,37,70,71,],[-32,-30,-31,57,-33,-34,]),'MULT':([15,23,24,37,70,71,],[-32,-30,-31,58,-33,-34,]),'DIV':([15,23,24,37,70,71,],[-32,-30,-31,59,-33,-34,]),'DO':([15,23,24,26,61,62,63,64,65,66,70,71,87,88,],[-32,-30,-31,40,-24,-25,-26,-27,-28,-29,-33,-34,91,92,]),'THEN':([15,23,24,29,61,62,63,64,65,66,70,71,],[-32,-30,-31,48,-24,-25,-26,-27,-28,-29,-33,-34,]),'TO':([15,23,24,69,70,71,],[-32,-30,-31,82,-33,-34,]),'DOWNTO':([15,23,24,69,70,71,],[-32,-30,-31,83,-33,-34,]),'FROM':([30,31,],[49,-16,]),'COLON':([35,72,],[54,84,]),'RBR':([50,51,73,89,],[70,71,85,93,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declarations':([2,],[4,]),'commands':([3,12,16,40,48,81,91,92,],[6,28,33,60,68,86,94,95,]),'command':([3,6,12,16,28,33,40,48,60,68,81,86,91,92,94,95,],[7,20,7,7,20,20,7,7,20,20,7,20,7,7,20,20,]),'identifier':([3,6,9,10,11,12,13,16,21,28,33,40,41,42,43,44,45,46,47,48,49,56,57,58,59,60,68,81,82,83,86,91,92,94,95,],[8,8,24,25,24,8,24,8,24,8,8,8,24,24,24,24,24,24,24,8,24,24,24,24,24,8,8,8,24,24,8,8,8,8,8,]),'value':([9,11,13,21,41,42,43,44,45,46,47,49,56,57,58,59,82,83,],[22,27,27,37,61,62,63,64,65,66,27,69,74,75,76,77,87,88,]),'condition':([11,13,47,],[26,29,67,]),'iterator':([14,],[30,]),'expression':([21,],[36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> DECLARE declarations BEGIN commands END','program',5,'p_program_declare','parser.py',16),
  ('program -> BEGIN commands END','program',3,'p_program_','parser.py',21),
  ('declarations -> declarations COMMA ID','declarations',3,'p_declarations_variable_rec','parser.py',30),
  ('declarations -> declarations COMMA ID LBR NUM COLON NUM RBR','declarations',8,'p_declarations_array_rec','parser.py',36),
  ('declarations -> ID','declarations',1,'p_declarations_variable','parser.py',41),
  ('declarations -> ID LBR NUM COLON NUM RBR','declarations',6,'p_declarations_array','parser.py',47),
  ('commands -> commands command','commands',2,'p_commands_multiple','parser.py',55),
  ('commands -> command','commands',1,'p_commands_single','parser.py',60),
  ('command -> identifier ASSIGN expression SEMICOLON','command',4,'p_command_assign','parser.py',69),
  ('command -> WRITE value SEMICOLON','command',3,'p_command_write','parser.py',78),
  ('command -> READ identifier SEMICOLON','command',3,'p_command_read','parser.py',88),
  ('command -> WHILE condition DO commands ENDWHILE','command',5,'p_command_while','parser.py',94),
  ('command -> REPEAT commands UNTIL condition SEMICOLON','command',5,'p_command_repeat_until','parser.py',101),
  ('command -> IF condition THEN commands ENDIF','command',5,'p_command_if','parser.py',107),
  ('command -> IF condition THEN commands ELSE commands ENDIF','command',7,'p_command_if_else','parser.py',112),
  ('iterator -> ID','iterator',1,'p_iterator','parser.py',120),
  ('command -> FOR iterator FROM value TO value DO commands ENDFOR','command',9,'p_command_for_to','parser.py',126),
  ('command -> FOR iterator FROM value DOWNTO value DO commands ENDFOR','command',9,'p_command_for_downto','parser.py',141),
  ('expression -> value','expression',1,'p_expression_value','parser.py',160),
  ('expression -> value PLUS value','expression',3,'p_expression_plus','parser.py',165),
  ('expression -> value MINUS value','expression',3,'p_expression_minus','parser.py',171),
  ('expression -> value MULT value','expression',3,'p_expression_multiplication','parser.py',177),
  ('expression -> value DIV value','expression',3,'p_expression_division','parser.py',192),
  ('condition -> value GT value','condition',3,'p_condition_gt','parser.py',210),
  ('condition -> value LT value','condition',3,'p_condition_lt','parser.py',220),
  ('condition -> value GEQ value','condition',3,'p_condition_geq','parser.py',230),
  ('condition -> value LEQ value','condition',3,'p_condition_leq','parser.py',243),
  ('condition -> value EQ value','condition',3,'p_condition_eq','parser.py',256),
  ('condition -> value NEQ value','condition',3,'p_condition_neq','parser.py',273),
  ('value -> NUM','value',1,'p_value_num','parser.py',294),
  ('value -> identifier','value',1,'p_value_identifier','parser.py',299),
  ('identifier -> ID','identifier',1,'p_identifier_id','parser.py',308),
  ('identifier -> ID LBR ID RBR','identifier',4,'p_identifier_table_recursive','parser.py',313),
  ('identifier -> ID LBR NUM RBR','identifier',4,'p_identifier_table_element','parser.py',318),
]
