Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOWNTO
    ENDFOR
    FOR
    FROM
    MOD
    REPEAT
    TO
    UNTIL

Grammar

Rule 0     S' -> program
Rule 1     program -> DECLARE declarations BEGIN commands END
Rule 2     program -> BEGIN commands END
Rule 3     declarations -> declarations COMMA ID
Rule 4     declarations -> declarations COMMA ID LBR NUM COLON NUM RBR
Rule 5     declarations -> ID
Rule 6     declarations -> ID LBR NUM COLON NUM RBR
Rule 7     commands -> commands command
Rule 8     commands -> command
Rule 9     command -> identifier ASSIGN expression SEMICOLON
Rule 10    command -> WRITE value SEMICOLON
Rule 11    command -> READ identifier SEMICOLON
Rule 12    command -> WHILE condition DO commands ENDWHILE
Rule 13    command -> IF condition THEN commands ENDIF
Rule 14    command -> IF condition THEN commands ELSE commands ENDIF
Rule 15    expression -> value
Rule 16    expression -> value PLUS value
Rule 17    expression -> value MINUS value
Rule 18    expression -> value MULT value
Rule 19    expression -> value DIV value
Rule 20    condition -> value GT value
Rule 21    condition -> value LT value
Rule 22    condition -> value GEQ value
Rule 23    condition -> value LEQ value
Rule 24    condition -> value EQ value
Rule 25    condition -> value NEQ value
Rule 26    value -> NUM
Rule 27    value -> identifier
Rule 28    identifier -> ID
Rule 29    identifier -> ID LBR ID RBR
Rule 30    identifier -> ID LBR NUM RBR

Terminals, with rules where they appear

ASSIGN               : 9
BEGIN                : 1 2
COLON                : 4 6
COMMA                : 3 4
DECLARE              : 1
DIV                  : 19
DO                   : 12
DOWNTO               : 
ELSE                 : 14
END                  : 1 2
ENDFOR               : 
ENDIF                : 13 14
ENDWHILE             : 12
EQ                   : 24
FOR                  : 
FROM                 : 
GEQ                  : 22
GT                   : 20
ID                   : 3 4 5 6 28 29 29 30
IF                   : 13 14
LBR                  : 4 6 29 30
LEQ                  : 23
LT                   : 21
MINUS                : 17
MOD                  : 
MULT                 : 18
NEQ                  : 25
NUM                  : 4 4 6 6 26 30
PLUS                 : 16
RBR                  : 4 6 29 30
READ                 : 11
REPEAT               : 
SEMICOLON            : 9 10 11
THEN                 : 13 14
TO                   : 
UNTIL                : 
WHILE                : 12
WRITE                : 10
error                : 

Nonterminals, with rules where they appear

command              : 7 8
commands             : 1 2 7 12 13 14 14
condition            : 12 13 14
declarations         : 1 3 4
expression           : 9
identifier           : 9 11 27
program              : 0
value                : 10 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . DECLARE declarations BEGIN commands END
    (2) program -> . BEGIN commands END

    DECLARE         shift and go to state 2
    BEGIN           shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> DECLARE . declarations BEGIN commands END
    (3) declarations -> . declarations COMMA ID
    (4) declarations -> . declarations COMMA ID LBR NUM COLON NUM RBR
    (5) declarations -> . ID
    (6) declarations -> . ID LBR NUM COLON NUM RBR

    ID              shift and go to state 5

    declarations                   shift and go to state 4

state 3

    (2) program -> BEGIN . commands END
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 13

    commands                       shift and go to state 6
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 4

    (1) program -> DECLARE declarations . BEGIN commands END
    (3) declarations -> declarations . COMMA ID
    (4) declarations -> declarations . COMMA ID LBR NUM COLON NUM RBR

    BEGIN           shift and go to state 14
    COMMA           shift and go to state 15


state 5

    (5) declarations -> ID .
    (6) declarations -> ID . LBR NUM COLON NUM RBR

    BEGIN           reduce using rule 5 (declarations -> ID .)
    COMMA           reduce using rule 5 (declarations -> ID .)
    LBR             shift and go to state 16


state 6

    (2) program -> BEGIN commands . END
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    END             shift and go to state 17
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 13

    command                        shift and go to state 18
    identifier                     shift and go to state 8

state 7

    (8) commands -> command .

    END             reduce using rule 8 (commands -> command .)
    WRITE           reduce using rule 8 (commands -> command .)
    READ            reduce using rule 8 (commands -> command .)
    WHILE           reduce using rule 8 (commands -> command .)
    IF              reduce using rule 8 (commands -> command .)
    ID              reduce using rule 8 (commands -> command .)
    ENDWHILE        reduce using rule 8 (commands -> command .)
    ENDIF           reduce using rule 8 (commands -> command .)
    ELSE            reduce using rule 8 (commands -> command .)


state 8

    (9) command -> identifier . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 19


state 9

    (10) command -> WRITE . value SEMICOLON
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    value                          shift and go to state 20
    identifier                     shift and go to state 22

state 10

    (11) command -> READ . identifier SEMICOLON
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    ID              shift and go to state 13

    identifier                     shift and go to state 23

state 11

    (12) command -> WHILE . condition DO commands ENDWHILE
    (20) condition -> . value GT value
    (21) condition -> . value LT value
    (22) condition -> . value GEQ value
    (23) condition -> . value LEQ value
    (24) condition -> . value EQ value
    (25) condition -> . value NEQ value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    condition                      shift and go to state 24
    value                          shift and go to state 25
    identifier                     shift and go to state 22

state 12

    (13) command -> IF . condition THEN commands ENDIF
    (14) command -> IF . condition THEN commands ELSE commands ENDIF
    (20) condition -> . value GT value
    (21) condition -> . value LT value
    (22) condition -> . value GEQ value
    (23) condition -> . value LEQ value
    (24) condition -> . value EQ value
    (25) condition -> . value NEQ value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    condition                      shift and go to state 26
    value                          shift and go to state 25
    identifier                     shift and go to state 22

state 13

    (28) identifier -> ID .
    (29) identifier -> ID . LBR ID RBR
    (30) identifier -> ID . LBR NUM RBR

    ASSIGN          reduce using rule 28 (identifier -> ID .)
    SEMICOLON       reduce using rule 28 (identifier -> ID .)
    GT              reduce using rule 28 (identifier -> ID .)
    LT              reduce using rule 28 (identifier -> ID .)
    GEQ             reduce using rule 28 (identifier -> ID .)
    LEQ             reduce using rule 28 (identifier -> ID .)
    EQ              reduce using rule 28 (identifier -> ID .)
    NEQ             reduce using rule 28 (identifier -> ID .)
    PLUS            reduce using rule 28 (identifier -> ID .)
    MINUS           reduce using rule 28 (identifier -> ID .)
    MULT            reduce using rule 28 (identifier -> ID .)
    DIV             reduce using rule 28 (identifier -> ID .)
    DO              reduce using rule 28 (identifier -> ID .)
    THEN            reduce using rule 28 (identifier -> ID .)
    LBR             shift and go to state 27


state 14

    (1) program -> DECLARE declarations BEGIN . commands END
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 13

    commands                       shift and go to state 28
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 15

    (3) declarations -> declarations COMMA . ID
    (4) declarations -> declarations COMMA . ID LBR NUM COLON NUM RBR

    ID              shift and go to state 29


state 16

    (6) declarations -> ID LBR . NUM COLON NUM RBR

    NUM             shift and go to state 30


state 17

    (2) program -> BEGIN commands END .

    $end            reduce using rule 2 (program -> BEGIN commands END .)


state 18

    (7) commands -> commands command .

    END             reduce using rule 7 (commands -> commands command .)
    WRITE           reduce using rule 7 (commands -> commands command .)
    READ            reduce using rule 7 (commands -> commands command .)
    WHILE           reduce using rule 7 (commands -> commands command .)
    IF              reduce using rule 7 (commands -> commands command .)
    ID              reduce using rule 7 (commands -> commands command .)
    ENDWHILE        reduce using rule 7 (commands -> commands command .)
    ENDIF           reduce using rule 7 (commands -> commands command .)
    ELSE            reduce using rule 7 (commands -> commands command .)


state 19

    (9) command -> identifier ASSIGN . expression SEMICOLON
    (15) expression -> . value
    (16) expression -> . value PLUS value
    (17) expression -> . value MINUS value
    (18) expression -> . value MULT value
    (19) expression -> . value DIV value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    identifier                     shift and go to state 22
    expression                     shift and go to state 31
    value                          shift and go to state 32

state 20

    (10) command -> WRITE value . SEMICOLON

    SEMICOLON       shift and go to state 33


state 21

    (26) value -> NUM .

    SEMICOLON       reduce using rule 26 (value -> NUM .)
    GT              reduce using rule 26 (value -> NUM .)
    LT              reduce using rule 26 (value -> NUM .)
    GEQ             reduce using rule 26 (value -> NUM .)
    LEQ             reduce using rule 26 (value -> NUM .)
    EQ              reduce using rule 26 (value -> NUM .)
    NEQ             reduce using rule 26 (value -> NUM .)
    PLUS            reduce using rule 26 (value -> NUM .)
    MINUS           reduce using rule 26 (value -> NUM .)
    MULT            reduce using rule 26 (value -> NUM .)
    DIV             reduce using rule 26 (value -> NUM .)
    DO              reduce using rule 26 (value -> NUM .)
    THEN            reduce using rule 26 (value -> NUM .)


state 22

    (27) value -> identifier .

    SEMICOLON       reduce using rule 27 (value -> identifier .)
    GT              reduce using rule 27 (value -> identifier .)
    LT              reduce using rule 27 (value -> identifier .)
    GEQ             reduce using rule 27 (value -> identifier .)
    LEQ             reduce using rule 27 (value -> identifier .)
    EQ              reduce using rule 27 (value -> identifier .)
    NEQ             reduce using rule 27 (value -> identifier .)
    PLUS            reduce using rule 27 (value -> identifier .)
    MINUS           reduce using rule 27 (value -> identifier .)
    MULT            reduce using rule 27 (value -> identifier .)
    DIV             reduce using rule 27 (value -> identifier .)
    DO              reduce using rule 27 (value -> identifier .)
    THEN            reduce using rule 27 (value -> identifier .)


state 23

    (11) command -> READ identifier . SEMICOLON

    SEMICOLON       shift and go to state 34


state 24

    (12) command -> WHILE condition . DO commands ENDWHILE

    DO              shift and go to state 35


state 25

    (20) condition -> value . GT value
    (21) condition -> value . LT value
    (22) condition -> value . GEQ value
    (23) condition -> value . LEQ value
    (24) condition -> value . EQ value
    (25) condition -> value . NEQ value

    GT              shift and go to state 36
    LT              shift and go to state 37
    GEQ             shift and go to state 38
    LEQ             shift and go to state 39
    EQ              shift and go to state 40
    NEQ             shift and go to state 41


state 26

    (13) command -> IF condition . THEN commands ENDIF
    (14) command -> IF condition . THEN commands ELSE commands ENDIF

    THEN            shift and go to state 42


state 27

    (29) identifier -> ID LBR . ID RBR
    (30) identifier -> ID LBR . NUM RBR

    ID              shift and go to state 43
    NUM             shift and go to state 44


state 28

    (1) program -> DECLARE declarations BEGIN commands . END
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    END             shift and go to state 45
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 13

    command                        shift and go to state 18
    identifier                     shift and go to state 8

state 29

    (3) declarations -> declarations COMMA ID .
    (4) declarations -> declarations COMMA ID . LBR NUM COLON NUM RBR

    BEGIN           reduce using rule 3 (declarations -> declarations COMMA ID .)
    COMMA           reduce using rule 3 (declarations -> declarations COMMA ID .)
    LBR             shift and go to state 46


state 30

    (6) declarations -> ID LBR NUM . COLON NUM RBR

    COLON           shift and go to state 47


state 31

    (9) command -> identifier ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 48


state 32

    (15) expression -> value .
    (16) expression -> value . PLUS value
    (17) expression -> value . MINUS value
    (18) expression -> value . MULT value
    (19) expression -> value . DIV value

    SEMICOLON       reduce using rule 15 (expression -> value .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    MULT            shift and go to state 51
    DIV             shift and go to state 52


state 33

    (10) command -> WRITE value SEMICOLON .

    END             reduce using rule 10 (command -> WRITE value SEMICOLON .)
    WRITE           reduce using rule 10 (command -> WRITE value SEMICOLON .)
    READ            reduce using rule 10 (command -> WRITE value SEMICOLON .)
    WHILE           reduce using rule 10 (command -> WRITE value SEMICOLON .)
    IF              reduce using rule 10 (command -> WRITE value SEMICOLON .)
    ID              reduce using rule 10 (command -> WRITE value SEMICOLON .)
    ENDWHILE        reduce using rule 10 (command -> WRITE value SEMICOLON .)
    ENDIF           reduce using rule 10 (command -> WRITE value SEMICOLON .)
    ELSE            reduce using rule 10 (command -> WRITE value SEMICOLON .)


state 34

    (11) command -> READ identifier SEMICOLON .

    END             reduce using rule 11 (command -> READ identifier SEMICOLON .)
    WRITE           reduce using rule 11 (command -> READ identifier SEMICOLON .)
    READ            reduce using rule 11 (command -> READ identifier SEMICOLON .)
    WHILE           reduce using rule 11 (command -> READ identifier SEMICOLON .)
    IF              reduce using rule 11 (command -> READ identifier SEMICOLON .)
    ID              reduce using rule 11 (command -> READ identifier SEMICOLON .)
    ENDWHILE        reduce using rule 11 (command -> READ identifier SEMICOLON .)
    ENDIF           reduce using rule 11 (command -> READ identifier SEMICOLON .)
    ELSE            reduce using rule 11 (command -> READ identifier SEMICOLON .)


state 35

    (12) command -> WHILE condition DO . commands ENDWHILE
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 13

    commands                       shift and go to state 53
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 36

    (20) condition -> value GT . value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    value                          shift and go to state 54
    identifier                     shift and go to state 22

state 37

    (21) condition -> value LT . value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    value                          shift and go to state 55
    identifier                     shift and go to state 22

state 38

    (22) condition -> value GEQ . value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    value                          shift and go to state 56
    identifier                     shift and go to state 22

state 39

    (23) condition -> value LEQ . value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    value                          shift and go to state 57
    identifier                     shift and go to state 22

state 40

    (24) condition -> value EQ . value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    value                          shift and go to state 58
    identifier                     shift and go to state 22

state 41

    (25) condition -> value NEQ . value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    value                          shift and go to state 59
    identifier                     shift and go to state 22

state 42

    (13) command -> IF condition THEN . commands ENDIF
    (14) command -> IF condition THEN . commands ELSE commands ENDIF
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 13

    commands                       shift and go to state 60
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 43

    (29) identifier -> ID LBR ID . RBR

    RBR             shift and go to state 61


state 44

    (30) identifier -> ID LBR NUM . RBR

    RBR             shift and go to state 62


state 45

    (1) program -> DECLARE declarations BEGIN commands END .

    $end            reduce using rule 1 (program -> DECLARE declarations BEGIN commands END .)


state 46

    (4) declarations -> declarations COMMA ID LBR . NUM COLON NUM RBR

    NUM             shift and go to state 63


state 47

    (6) declarations -> ID LBR NUM COLON . NUM RBR

    NUM             shift and go to state 64


state 48

    (9) command -> identifier ASSIGN expression SEMICOLON .

    END             reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    READ            reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    IF              reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    ID              reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDWHILE        reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDIF           reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)


state 49

    (16) expression -> value PLUS . value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    value                          shift and go to state 65
    identifier                     shift and go to state 22

state 50

    (17) expression -> value MINUS . value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    value                          shift and go to state 66
    identifier                     shift and go to state 22

state 51

    (18) expression -> value MULT . value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    value                          shift and go to state 67
    identifier                     shift and go to state 22

state 52

    (19) expression -> value DIV . value
    (26) value -> . NUM
    (27) value -> . identifier
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 21
    ID              shift and go to state 13

    value                          shift and go to state 68
    identifier                     shift and go to state 22

state 53

    (12) command -> WHILE condition DO commands . ENDWHILE
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    ENDWHILE        shift and go to state 69
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 13

    command                        shift and go to state 18
    identifier                     shift and go to state 8

state 54

    (20) condition -> value GT value .

    DO              reduce using rule 20 (condition -> value GT value .)
    THEN            reduce using rule 20 (condition -> value GT value .)


state 55

    (21) condition -> value LT value .

    DO              reduce using rule 21 (condition -> value LT value .)
    THEN            reduce using rule 21 (condition -> value LT value .)


state 56

    (22) condition -> value GEQ value .

    DO              reduce using rule 22 (condition -> value GEQ value .)
    THEN            reduce using rule 22 (condition -> value GEQ value .)


state 57

    (23) condition -> value LEQ value .

    DO              reduce using rule 23 (condition -> value LEQ value .)
    THEN            reduce using rule 23 (condition -> value LEQ value .)


state 58

    (24) condition -> value EQ value .

    DO              reduce using rule 24 (condition -> value EQ value .)
    THEN            reduce using rule 24 (condition -> value EQ value .)


state 59

    (25) condition -> value NEQ value .

    DO              reduce using rule 25 (condition -> value NEQ value .)
    THEN            reduce using rule 25 (condition -> value NEQ value .)


state 60

    (13) command -> IF condition THEN commands . ENDIF
    (14) command -> IF condition THEN commands . ELSE commands ENDIF
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    ENDIF           shift and go to state 70
    ELSE            shift and go to state 71
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 13

    command                        shift and go to state 18
    identifier                     shift and go to state 8

state 61

    (29) identifier -> ID LBR ID RBR .

    ASSIGN          reduce using rule 29 (identifier -> ID LBR ID RBR .)
    SEMICOLON       reduce using rule 29 (identifier -> ID LBR ID RBR .)
    GT              reduce using rule 29 (identifier -> ID LBR ID RBR .)
    LT              reduce using rule 29 (identifier -> ID LBR ID RBR .)
    GEQ             reduce using rule 29 (identifier -> ID LBR ID RBR .)
    LEQ             reduce using rule 29 (identifier -> ID LBR ID RBR .)
    EQ              reduce using rule 29 (identifier -> ID LBR ID RBR .)
    NEQ             reduce using rule 29 (identifier -> ID LBR ID RBR .)
    PLUS            reduce using rule 29 (identifier -> ID LBR ID RBR .)
    MINUS           reduce using rule 29 (identifier -> ID LBR ID RBR .)
    MULT            reduce using rule 29 (identifier -> ID LBR ID RBR .)
    DIV             reduce using rule 29 (identifier -> ID LBR ID RBR .)
    DO              reduce using rule 29 (identifier -> ID LBR ID RBR .)
    THEN            reduce using rule 29 (identifier -> ID LBR ID RBR .)


state 62

    (30) identifier -> ID LBR NUM RBR .

    ASSIGN          reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    SEMICOLON       reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    GT              reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    LT              reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    GEQ             reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    LEQ             reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    EQ              reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    NEQ             reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    PLUS            reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    MINUS           reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    MULT            reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    DIV             reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    DO              reduce using rule 30 (identifier -> ID LBR NUM RBR .)
    THEN            reduce using rule 30 (identifier -> ID LBR NUM RBR .)


state 63

    (4) declarations -> declarations COMMA ID LBR NUM . COLON NUM RBR

    COLON           shift and go to state 72


state 64

    (6) declarations -> ID LBR NUM COLON NUM . RBR

    RBR             shift and go to state 73


state 65

    (16) expression -> value PLUS value .

    SEMICOLON       reduce using rule 16 (expression -> value PLUS value .)


state 66

    (17) expression -> value MINUS value .

    SEMICOLON       reduce using rule 17 (expression -> value MINUS value .)


state 67

    (18) expression -> value MULT value .

    SEMICOLON       reduce using rule 18 (expression -> value MULT value .)


state 68

    (19) expression -> value DIV value .

    SEMICOLON       reduce using rule 19 (expression -> value DIV value .)


state 69

    (12) command -> WHILE condition DO commands ENDWHILE .

    END             reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    WRITE           reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    READ            reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    WHILE           reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    IF              reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ID              reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ENDWHILE        reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ENDIF           reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ELSE            reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)


state 70

    (13) command -> IF condition THEN commands ENDIF .

    END             reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    WRITE           reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    READ            reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    WHILE           reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    IF              reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    ID              reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    ENDWHILE        reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    ENDIF           reduce using rule 13 (command -> IF condition THEN commands ENDIF .)
    ELSE            reduce using rule 13 (command -> IF condition THEN commands ENDIF .)


state 71

    (14) command -> IF condition THEN commands ELSE . commands ENDIF
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 13

    commands                       shift and go to state 74
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 72

    (4) declarations -> declarations COMMA ID LBR NUM COLON . NUM RBR

    NUM             shift and go to state 75


state 73

    (6) declarations -> ID LBR NUM COLON NUM RBR .

    BEGIN           reduce using rule 6 (declarations -> ID LBR NUM COLON NUM RBR .)
    COMMA           reduce using rule 6 (declarations -> ID LBR NUM COLON NUM RBR .)


state 74

    (14) command -> IF condition THEN commands ELSE commands . ENDIF
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ENDIF
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (28) identifier -> . ID
    (29) identifier -> . ID LBR ID RBR
    (30) identifier -> . ID LBR NUM RBR

    ENDIF           shift and go to state 76
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    ID              shift and go to state 13

    command                        shift and go to state 18
    identifier                     shift and go to state 8

state 75

    (4) declarations -> declarations COMMA ID LBR NUM COLON NUM . RBR

    RBR             shift and go to state 77


state 76

    (14) command -> IF condition THEN commands ELSE commands ENDIF .

    END             reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WRITE           reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    READ            reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WHILE           reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    IF              reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ID              reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDWHILE        reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDIF           reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ELSE            reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)


state 77

    (4) declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .

    BEGIN           reduce using rule 4 (declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .)
    COMMA           reduce using rule 4 (declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .)

