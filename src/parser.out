Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIV
    DO
    DOWNTO
    ELSE
    ENDFOR
    ENDIF
    ENDWHILE
    EQ
    FOR
    FROM
    GEQ
    GT
    IF
    LEQ
    LT
    MOD
    NEQ
    REPEAT
    THEN
    TO
    UNTIL
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> DECLARE declarations BEGIN commands END
Rule 2     program -> BEGIN commands END
Rule 3     declarations -> declarations COMMA ID
Rule 4     declarations -> declarations COMMA ID LBR NUM COLON NUM RBR
Rule 5     declarations -> ID
Rule 6     declarations -> ID LBR NUM COLON NUM RBR
Rule 7     commands -> commands command
Rule 8     commands -> command
Rule 9     command -> identifier ASSIGN expression SEMICOLON
Rule 10    command -> WRITE value SEMICOLON
Rule 11    command -> READ identifier SEMICOLON
Rule 12    expression -> value
Rule 13    expression -> value PLUS value
Rule 14    expression -> value MINUS value
Rule 15    expression -> value MULT value
Rule 16    value -> NUM
Rule 17    value -> identifier
Rule 18    identifier -> ID
Rule 19    identifier -> ID LBR ID RBR
Rule 20    identifier -> ID LBR NUM RBR

Terminals, with rules where they appear

ASSIGN               : 9
BEGIN                : 1 2
COLON                : 4 6
COMMA                : 3 4
DECLARE              : 1
DIV                  : 
DO                   : 
DOWNTO               : 
ELSE                 : 
END                  : 1 2
ENDFOR               : 
ENDIF                : 
ENDWHILE             : 
EQ                   : 
FOR                  : 
FROM                 : 
GEQ                  : 
GT                   : 
ID                   : 3 4 5 6 18 19 19 20
IF                   : 
LBR                  : 4 6 19 20
LEQ                  : 
LT                   : 
MINUS                : 14
MOD                  : 
MULT                 : 15
NEQ                  : 
NUM                  : 4 4 6 6 16 20
PLUS                 : 13
RBR                  : 4 6 19 20
READ                 : 11
REPEAT               : 
SEMICOLON            : 9 10 11
THEN                 : 
TO                   : 
UNTIL                : 
WHILE                : 
WRITE                : 10
error                : 

Nonterminals, with rules where they appear

command              : 7 8
commands             : 1 2 7
declarations         : 1 3 4
expression           : 9
identifier           : 9 11 17
program              : 0
value                : 10 12 13 13 14 14 15 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . DECLARE declarations BEGIN commands END
    (2) program -> . BEGIN commands END

    DECLARE         shift and go to state 2
    BEGIN           shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> DECLARE . declarations BEGIN commands END
    (3) declarations -> . declarations COMMA ID
    (4) declarations -> . declarations COMMA ID LBR NUM COLON NUM RBR
    (5) declarations -> . ID
    (6) declarations -> . ID LBR NUM COLON NUM RBR

    ID              shift and go to state 5

    declarations                   shift and go to state 4

state 3

    (2) program -> BEGIN . commands END
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (18) identifier -> . ID
    (19) identifier -> . ID LBR ID RBR
    (20) identifier -> . ID LBR NUM RBR

    WRITE           shift and go to state 9
    READ            shift and go to state 10
    ID              shift and go to state 11

    commands                       shift and go to state 6
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 4

    (1) program -> DECLARE declarations . BEGIN commands END
    (3) declarations -> declarations . COMMA ID
    (4) declarations -> declarations . COMMA ID LBR NUM COLON NUM RBR

    BEGIN           shift and go to state 12
    COMMA           shift and go to state 13


state 5

    (5) declarations -> ID .
    (6) declarations -> ID . LBR NUM COLON NUM RBR

    BEGIN           reduce using rule 5 (declarations -> ID .)
    COMMA           reduce using rule 5 (declarations -> ID .)
    LBR             shift and go to state 14


state 6

    (2) program -> BEGIN commands . END
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (18) identifier -> . ID
    (19) identifier -> . ID LBR ID RBR
    (20) identifier -> . ID LBR NUM RBR

    END             shift and go to state 15
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    ID              shift and go to state 11

    command                        shift and go to state 16
    identifier                     shift and go to state 8

state 7

    (8) commands -> command .

    END             reduce using rule 8 (commands -> command .)
    WRITE           reduce using rule 8 (commands -> command .)
    READ            reduce using rule 8 (commands -> command .)
    ID              reduce using rule 8 (commands -> command .)


state 8

    (9) command -> identifier . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 17


state 9

    (10) command -> WRITE . value SEMICOLON
    (16) value -> . NUM
    (17) value -> . identifier
    (18) identifier -> . ID
    (19) identifier -> . ID LBR ID RBR
    (20) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 19
    ID              shift and go to state 11

    value                          shift and go to state 18
    identifier                     shift and go to state 20

state 10

    (11) command -> READ . identifier SEMICOLON
    (18) identifier -> . ID
    (19) identifier -> . ID LBR ID RBR
    (20) identifier -> . ID LBR NUM RBR

    ID              shift and go to state 11

    identifier                     shift and go to state 21

state 11

    (18) identifier -> ID .
    (19) identifier -> ID . LBR ID RBR
    (20) identifier -> ID . LBR NUM RBR

    ASSIGN          reduce using rule 18 (identifier -> ID .)
    SEMICOLON       reduce using rule 18 (identifier -> ID .)
    PLUS            reduce using rule 18 (identifier -> ID .)
    MINUS           reduce using rule 18 (identifier -> ID .)
    MULT            reduce using rule 18 (identifier -> ID .)
    LBR             shift and go to state 22


state 12

    (1) program -> DECLARE declarations BEGIN . commands END
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (18) identifier -> . ID
    (19) identifier -> . ID LBR ID RBR
    (20) identifier -> . ID LBR NUM RBR

    WRITE           shift and go to state 9
    READ            shift and go to state 10
    ID              shift and go to state 11

    commands                       shift and go to state 23
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 13

    (3) declarations -> declarations COMMA . ID
    (4) declarations -> declarations COMMA . ID LBR NUM COLON NUM RBR

    ID              shift and go to state 24


state 14

    (6) declarations -> ID LBR . NUM COLON NUM RBR

    NUM             shift and go to state 25


state 15

    (2) program -> BEGIN commands END .

    $end            reduce using rule 2 (program -> BEGIN commands END .)


state 16

    (7) commands -> commands command .

    END             reduce using rule 7 (commands -> commands command .)
    WRITE           reduce using rule 7 (commands -> commands command .)
    READ            reduce using rule 7 (commands -> commands command .)
    ID              reduce using rule 7 (commands -> commands command .)


state 17

    (9) command -> identifier ASSIGN . expression SEMICOLON
    (12) expression -> . value
    (13) expression -> . value PLUS value
    (14) expression -> . value MINUS value
    (15) expression -> . value MULT value
    (16) value -> . NUM
    (17) value -> . identifier
    (18) identifier -> . ID
    (19) identifier -> . ID LBR ID RBR
    (20) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 19
    ID              shift and go to state 11

    identifier                     shift and go to state 20
    expression                     shift and go to state 26
    value                          shift and go to state 27

state 18

    (10) command -> WRITE value . SEMICOLON

    SEMICOLON       shift and go to state 28


state 19

    (16) value -> NUM .

    SEMICOLON       reduce using rule 16 (value -> NUM .)
    PLUS            reduce using rule 16 (value -> NUM .)
    MINUS           reduce using rule 16 (value -> NUM .)
    MULT            reduce using rule 16 (value -> NUM .)


state 20

    (17) value -> identifier .

    SEMICOLON       reduce using rule 17 (value -> identifier .)
    PLUS            reduce using rule 17 (value -> identifier .)
    MINUS           reduce using rule 17 (value -> identifier .)
    MULT            reduce using rule 17 (value -> identifier .)


state 21

    (11) command -> READ identifier . SEMICOLON

    SEMICOLON       shift and go to state 29


state 22

    (19) identifier -> ID LBR . ID RBR
    (20) identifier -> ID LBR . NUM RBR

    ID              shift and go to state 30
    NUM             shift and go to state 31


state 23

    (1) program -> DECLARE declarations BEGIN commands . END
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (18) identifier -> . ID
    (19) identifier -> . ID LBR ID RBR
    (20) identifier -> . ID LBR NUM RBR

    END             shift and go to state 32
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    ID              shift and go to state 11

    command                        shift and go to state 16
    identifier                     shift and go to state 8

state 24

    (3) declarations -> declarations COMMA ID .
    (4) declarations -> declarations COMMA ID . LBR NUM COLON NUM RBR

    BEGIN           reduce using rule 3 (declarations -> declarations COMMA ID .)
    COMMA           reduce using rule 3 (declarations -> declarations COMMA ID .)
    LBR             shift and go to state 33


state 25

    (6) declarations -> ID LBR NUM . COLON NUM RBR

    COLON           shift and go to state 34


state 26

    (9) command -> identifier ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 35


state 27

    (12) expression -> value .
    (13) expression -> value . PLUS value
    (14) expression -> value . MINUS value
    (15) expression -> value . MULT value

    SEMICOLON       reduce using rule 12 (expression -> value .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULT            shift and go to state 38


state 28

    (10) command -> WRITE value SEMICOLON .

    END             reduce using rule 10 (command -> WRITE value SEMICOLON .)
    WRITE           reduce using rule 10 (command -> WRITE value SEMICOLON .)
    READ            reduce using rule 10 (command -> WRITE value SEMICOLON .)
    ID              reduce using rule 10 (command -> WRITE value SEMICOLON .)


state 29

    (11) command -> READ identifier SEMICOLON .

    END             reduce using rule 11 (command -> READ identifier SEMICOLON .)
    WRITE           reduce using rule 11 (command -> READ identifier SEMICOLON .)
    READ            reduce using rule 11 (command -> READ identifier SEMICOLON .)
    ID              reduce using rule 11 (command -> READ identifier SEMICOLON .)


state 30

    (19) identifier -> ID LBR ID . RBR

    RBR             shift and go to state 39


state 31

    (20) identifier -> ID LBR NUM . RBR

    RBR             shift and go to state 40


state 32

    (1) program -> DECLARE declarations BEGIN commands END .

    $end            reduce using rule 1 (program -> DECLARE declarations BEGIN commands END .)


state 33

    (4) declarations -> declarations COMMA ID LBR . NUM COLON NUM RBR

    NUM             shift and go to state 41


state 34

    (6) declarations -> ID LBR NUM COLON . NUM RBR

    NUM             shift and go to state 42


state 35

    (9) command -> identifier ASSIGN expression SEMICOLON .

    END             reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    READ            reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    ID              reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)


state 36

    (13) expression -> value PLUS . value
    (16) value -> . NUM
    (17) value -> . identifier
    (18) identifier -> . ID
    (19) identifier -> . ID LBR ID RBR
    (20) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 19
    ID              shift and go to state 11

    value                          shift and go to state 43
    identifier                     shift and go to state 20

state 37

    (14) expression -> value MINUS . value
    (16) value -> . NUM
    (17) value -> . identifier
    (18) identifier -> . ID
    (19) identifier -> . ID LBR ID RBR
    (20) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 19
    ID              shift and go to state 11

    value                          shift and go to state 44
    identifier                     shift and go to state 20

state 38

    (15) expression -> value MULT . value
    (16) value -> . NUM
    (17) value -> . identifier
    (18) identifier -> . ID
    (19) identifier -> . ID LBR ID RBR
    (20) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 19
    ID              shift and go to state 11

    value                          shift and go to state 45
    identifier                     shift and go to state 20

state 39

    (19) identifier -> ID LBR ID RBR .

    ASSIGN          reduce using rule 19 (identifier -> ID LBR ID RBR .)
    SEMICOLON       reduce using rule 19 (identifier -> ID LBR ID RBR .)
    PLUS            reduce using rule 19 (identifier -> ID LBR ID RBR .)
    MINUS           reduce using rule 19 (identifier -> ID LBR ID RBR .)
    MULT            reduce using rule 19 (identifier -> ID LBR ID RBR .)


state 40

    (20) identifier -> ID LBR NUM RBR .

    ASSIGN          reduce using rule 20 (identifier -> ID LBR NUM RBR .)
    SEMICOLON       reduce using rule 20 (identifier -> ID LBR NUM RBR .)
    PLUS            reduce using rule 20 (identifier -> ID LBR NUM RBR .)
    MINUS           reduce using rule 20 (identifier -> ID LBR NUM RBR .)
    MULT            reduce using rule 20 (identifier -> ID LBR NUM RBR .)


state 41

    (4) declarations -> declarations COMMA ID LBR NUM . COLON NUM RBR

    COLON           shift and go to state 46


state 42

    (6) declarations -> ID LBR NUM COLON NUM . RBR

    RBR             shift and go to state 47


state 43

    (13) expression -> value PLUS value .

    SEMICOLON       reduce using rule 13 (expression -> value PLUS value .)


state 44

    (14) expression -> value MINUS value .

    SEMICOLON       reduce using rule 14 (expression -> value MINUS value .)


state 45

    (15) expression -> value MULT value .

    SEMICOLON       reduce using rule 15 (expression -> value MULT value .)


state 46

    (4) declarations -> declarations COMMA ID LBR NUM COLON . NUM RBR

    NUM             shift and go to state 48


state 47

    (6) declarations -> ID LBR NUM COLON NUM RBR .

    BEGIN           reduce using rule 6 (declarations -> ID LBR NUM COLON NUM RBR .)
    COMMA           reduce using rule 6 (declarations -> ID LBR NUM COLON NUM RBR .)


state 48

    (4) declarations -> declarations COMMA ID LBR NUM COLON NUM . RBR

    RBR             shift and go to state 49


state 49

    (4) declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .

    BEGIN           reduce using rule 4 (declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .)
    COMMA           reduce using rule 4 (declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .)

