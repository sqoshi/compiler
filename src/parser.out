Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOWNTO
    ELSE
    ENDFOR
    ENDIF
    EQ
    FOR
    FROM
    GEQ
    IF
    LEQ
    MOD
    NEQ
    REPEAT
    THEN
    TO
    UNTIL

Grammar

Rule 0     S' -> program
Rule 1     program -> DECLARE declarations BEGIN commands END
Rule 2     program -> BEGIN commands END
Rule 3     declarations -> declarations COMMA ID
Rule 4     declarations -> declarations COMMA ID LBR NUM COLON NUM RBR
Rule 5     declarations -> ID
Rule 6     declarations -> ID LBR NUM COLON NUM RBR
Rule 7     commands -> commands command
Rule 8     commands -> command
Rule 9     command -> identifier ASSIGN expression SEMICOLON
Rule 10    command -> WRITE value SEMICOLON
Rule 11    command -> READ identifier SEMICOLON
Rule 12    command -> WHILE condition DO commands ENDWHILE
Rule 13    expression -> value
Rule 14    expression -> value PLUS value
Rule 15    expression -> value MINUS value
Rule 16    expression -> value MULT value
Rule 17    expression -> value DIV value
Rule 18    condition -> value GT value
Rule 19    condition -> value LT value
Rule 20    value -> NUM
Rule 21    value -> identifier
Rule 22    identifier -> ID
Rule 23    identifier -> ID LBR ID RBR
Rule 24    identifier -> ID LBR NUM RBR

Terminals, with rules where they appear

ASSIGN               : 9
BEGIN                : 1 2
COLON                : 4 6
COMMA                : 3 4
DECLARE              : 1
DIV                  : 17
DO                   : 12
DOWNTO               : 
ELSE                 : 
END                  : 1 2
ENDFOR               : 
ENDIF                : 
ENDWHILE             : 12
EQ                   : 
FOR                  : 
FROM                 : 
GEQ                  : 
GT                   : 18
ID                   : 3 4 5 6 22 23 23 24
IF                   : 
LBR                  : 4 6 23 24
LEQ                  : 
LT                   : 19
MINUS                : 15
MOD                  : 
MULT                 : 16
NEQ                  : 
NUM                  : 4 4 6 6 20 24
PLUS                 : 14
RBR                  : 4 6 23 24
READ                 : 11
REPEAT               : 
SEMICOLON            : 9 10 11
THEN                 : 
TO                   : 
UNTIL                : 
WHILE                : 12
WRITE                : 10
error                : 

Nonterminals, with rules where they appear

command              : 7 8
commands             : 1 2 7 12
condition            : 12
declarations         : 1 3 4
expression           : 9
identifier           : 9 11 21
program              : 0
value                : 10 13 14 14 15 15 16 16 17 17 18 18 19 19

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . DECLARE declarations BEGIN commands END
    (2) program -> . BEGIN commands END

    DECLARE         shift and go to state 2
    BEGIN           shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> DECLARE . declarations BEGIN commands END
    (3) declarations -> . declarations COMMA ID
    (4) declarations -> . declarations COMMA ID LBR NUM COLON NUM RBR
    (5) declarations -> . ID
    (6) declarations -> . ID LBR NUM COLON NUM RBR

    ID              shift and go to state 5

    declarations                   shift and go to state 4

state 3

    (2) program -> BEGIN . commands END
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    ID              shift and go to state 12

    commands                       shift and go to state 6
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 4

    (1) program -> DECLARE declarations . BEGIN commands END
    (3) declarations -> declarations . COMMA ID
    (4) declarations -> declarations . COMMA ID LBR NUM COLON NUM RBR

    BEGIN           shift and go to state 13
    COMMA           shift and go to state 14


state 5

    (5) declarations -> ID .
    (6) declarations -> ID . LBR NUM COLON NUM RBR

    BEGIN           reduce using rule 5 (declarations -> ID .)
    COMMA           reduce using rule 5 (declarations -> ID .)
    LBR             shift and go to state 15


state 6

    (2) program -> BEGIN commands . END
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    END             shift and go to state 16
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    ID              shift and go to state 12

    command                        shift and go to state 17
    identifier                     shift and go to state 8

state 7

    (8) commands -> command .

    END             reduce using rule 8 (commands -> command .)
    WRITE           reduce using rule 8 (commands -> command .)
    READ            reduce using rule 8 (commands -> command .)
    WHILE           reduce using rule 8 (commands -> command .)
    ID              reduce using rule 8 (commands -> command .)
    ENDWHILE        reduce using rule 8 (commands -> command .)


state 8

    (9) command -> identifier . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 18


state 9

    (10) command -> WRITE . value SEMICOLON
    (20) value -> . NUM
    (21) value -> . identifier
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 20
    ID              shift and go to state 12

    value                          shift and go to state 19
    identifier                     shift and go to state 21

state 10

    (11) command -> READ . identifier SEMICOLON
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    ID              shift and go to state 12

    identifier                     shift and go to state 22

state 11

    (12) command -> WHILE . condition DO commands ENDWHILE
    (18) condition -> . value GT value
    (19) condition -> . value LT value
    (20) value -> . NUM
    (21) value -> . identifier
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 20
    ID              shift and go to state 12

    condition                      shift and go to state 23
    value                          shift and go to state 24
    identifier                     shift and go to state 21

state 12

    (22) identifier -> ID .
    (23) identifier -> ID . LBR ID RBR
    (24) identifier -> ID . LBR NUM RBR

    ASSIGN          reduce using rule 22 (identifier -> ID .)
    SEMICOLON       reduce using rule 22 (identifier -> ID .)
    GT              reduce using rule 22 (identifier -> ID .)
    LT              reduce using rule 22 (identifier -> ID .)
    PLUS            reduce using rule 22 (identifier -> ID .)
    MINUS           reduce using rule 22 (identifier -> ID .)
    MULT            reduce using rule 22 (identifier -> ID .)
    DIV             reduce using rule 22 (identifier -> ID .)
    DO              reduce using rule 22 (identifier -> ID .)
    LBR             shift and go to state 25


state 13

    (1) program -> DECLARE declarations BEGIN . commands END
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    ID              shift and go to state 12

    commands                       shift and go to state 26
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 14

    (3) declarations -> declarations COMMA . ID
    (4) declarations -> declarations COMMA . ID LBR NUM COLON NUM RBR

    ID              shift and go to state 27


state 15

    (6) declarations -> ID LBR . NUM COLON NUM RBR

    NUM             shift and go to state 28


state 16

    (2) program -> BEGIN commands END .

    $end            reduce using rule 2 (program -> BEGIN commands END .)


state 17

    (7) commands -> commands command .

    END             reduce using rule 7 (commands -> commands command .)
    WRITE           reduce using rule 7 (commands -> commands command .)
    READ            reduce using rule 7 (commands -> commands command .)
    WHILE           reduce using rule 7 (commands -> commands command .)
    ID              reduce using rule 7 (commands -> commands command .)
    ENDWHILE        reduce using rule 7 (commands -> commands command .)


state 18

    (9) command -> identifier ASSIGN . expression SEMICOLON
    (13) expression -> . value
    (14) expression -> . value PLUS value
    (15) expression -> . value MINUS value
    (16) expression -> . value MULT value
    (17) expression -> . value DIV value
    (20) value -> . NUM
    (21) value -> . identifier
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 20
    ID              shift and go to state 12

    identifier                     shift and go to state 21
    expression                     shift and go to state 29
    value                          shift and go to state 30

state 19

    (10) command -> WRITE value . SEMICOLON

    SEMICOLON       shift and go to state 31


state 20

    (20) value -> NUM .

    SEMICOLON       reduce using rule 20 (value -> NUM .)
    GT              reduce using rule 20 (value -> NUM .)
    LT              reduce using rule 20 (value -> NUM .)
    PLUS            reduce using rule 20 (value -> NUM .)
    MINUS           reduce using rule 20 (value -> NUM .)
    MULT            reduce using rule 20 (value -> NUM .)
    DIV             reduce using rule 20 (value -> NUM .)
    DO              reduce using rule 20 (value -> NUM .)


state 21

    (21) value -> identifier .

    SEMICOLON       reduce using rule 21 (value -> identifier .)
    GT              reduce using rule 21 (value -> identifier .)
    LT              reduce using rule 21 (value -> identifier .)
    PLUS            reduce using rule 21 (value -> identifier .)
    MINUS           reduce using rule 21 (value -> identifier .)
    MULT            reduce using rule 21 (value -> identifier .)
    DIV             reduce using rule 21 (value -> identifier .)
    DO              reduce using rule 21 (value -> identifier .)


state 22

    (11) command -> READ identifier . SEMICOLON

    SEMICOLON       shift and go to state 32


state 23

    (12) command -> WHILE condition . DO commands ENDWHILE

    DO              shift and go to state 33


state 24

    (18) condition -> value . GT value
    (19) condition -> value . LT value

    GT              shift and go to state 34
    LT              shift and go to state 35


state 25

    (23) identifier -> ID LBR . ID RBR
    (24) identifier -> ID LBR . NUM RBR

    ID              shift and go to state 36
    NUM             shift and go to state 37


state 26

    (1) program -> DECLARE declarations BEGIN commands . END
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    END             shift and go to state 38
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    ID              shift and go to state 12

    command                        shift and go to state 17
    identifier                     shift and go to state 8

state 27

    (3) declarations -> declarations COMMA ID .
    (4) declarations -> declarations COMMA ID . LBR NUM COLON NUM RBR

    BEGIN           reduce using rule 3 (declarations -> declarations COMMA ID .)
    COMMA           reduce using rule 3 (declarations -> declarations COMMA ID .)
    LBR             shift and go to state 39


state 28

    (6) declarations -> ID LBR NUM . COLON NUM RBR

    COLON           shift and go to state 40


state 29

    (9) command -> identifier ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 41


state 30

    (13) expression -> value .
    (14) expression -> value . PLUS value
    (15) expression -> value . MINUS value
    (16) expression -> value . MULT value
    (17) expression -> value . DIV value

    SEMICOLON       reduce using rule 13 (expression -> value .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULT            shift and go to state 44
    DIV             shift and go to state 45


state 31

    (10) command -> WRITE value SEMICOLON .

    END             reduce using rule 10 (command -> WRITE value SEMICOLON .)
    WRITE           reduce using rule 10 (command -> WRITE value SEMICOLON .)
    READ            reduce using rule 10 (command -> WRITE value SEMICOLON .)
    WHILE           reduce using rule 10 (command -> WRITE value SEMICOLON .)
    ID              reduce using rule 10 (command -> WRITE value SEMICOLON .)
    ENDWHILE        reduce using rule 10 (command -> WRITE value SEMICOLON .)


state 32

    (11) command -> READ identifier SEMICOLON .

    END             reduce using rule 11 (command -> READ identifier SEMICOLON .)
    WRITE           reduce using rule 11 (command -> READ identifier SEMICOLON .)
    READ            reduce using rule 11 (command -> READ identifier SEMICOLON .)
    WHILE           reduce using rule 11 (command -> READ identifier SEMICOLON .)
    ID              reduce using rule 11 (command -> READ identifier SEMICOLON .)
    ENDWHILE        reduce using rule 11 (command -> READ identifier SEMICOLON .)


state 33

    (12) command -> WHILE condition DO . commands ENDWHILE
    (7) commands -> . commands command
    (8) commands -> . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    ID              shift and go to state 12

    commands                       shift and go to state 46
    command                        shift and go to state 7
    identifier                     shift and go to state 8

state 34

    (18) condition -> value GT . value
    (20) value -> . NUM
    (21) value -> . identifier
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 20
    ID              shift and go to state 12

    value                          shift and go to state 47
    identifier                     shift and go to state 21

state 35

    (19) condition -> value LT . value
    (20) value -> . NUM
    (21) value -> . identifier
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 20
    ID              shift and go to state 12

    value                          shift and go to state 48
    identifier                     shift and go to state 21

state 36

    (23) identifier -> ID LBR ID . RBR

    RBR             shift and go to state 49


state 37

    (24) identifier -> ID LBR NUM . RBR

    RBR             shift and go to state 50


state 38

    (1) program -> DECLARE declarations BEGIN commands END .

    $end            reduce using rule 1 (program -> DECLARE declarations BEGIN commands END .)


state 39

    (4) declarations -> declarations COMMA ID LBR . NUM COLON NUM RBR

    NUM             shift and go to state 51


state 40

    (6) declarations -> ID LBR NUM COLON . NUM RBR

    NUM             shift and go to state 52


state 41

    (9) command -> identifier ASSIGN expression SEMICOLON .

    END             reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    READ            reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    ID              reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDWHILE        reduce using rule 9 (command -> identifier ASSIGN expression SEMICOLON .)


state 42

    (14) expression -> value PLUS . value
    (20) value -> . NUM
    (21) value -> . identifier
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 20
    ID              shift and go to state 12

    value                          shift and go to state 53
    identifier                     shift and go to state 21

state 43

    (15) expression -> value MINUS . value
    (20) value -> . NUM
    (21) value -> . identifier
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 20
    ID              shift and go to state 12

    value                          shift and go to state 54
    identifier                     shift and go to state 21

state 44

    (16) expression -> value MULT . value
    (20) value -> . NUM
    (21) value -> . identifier
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 20
    ID              shift and go to state 12

    value                          shift and go to state 55
    identifier                     shift and go to state 21

state 45

    (17) expression -> value DIV . value
    (20) value -> . NUM
    (21) value -> . identifier
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    NUM             shift and go to state 20
    ID              shift and go to state 12

    value                          shift and go to state 56
    identifier                     shift and go to state 21

state 46

    (12) command -> WHILE condition DO commands . ENDWHILE
    (7) commands -> commands . command
    (9) command -> . identifier ASSIGN expression SEMICOLON
    (10) command -> . WRITE value SEMICOLON
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WHILE condition DO commands ENDWHILE
    (22) identifier -> . ID
    (23) identifier -> . ID LBR ID RBR
    (24) identifier -> . ID LBR NUM RBR

    ENDWHILE        shift and go to state 57
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    WHILE           shift and go to state 11
    ID              shift and go to state 12

    command                        shift and go to state 17
    identifier                     shift and go to state 8

state 47

    (18) condition -> value GT value .

    DO              reduce using rule 18 (condition -> value GT value .)


state 48

    (19) condition -> value LT value .

    DO              reduce using rule 19 (condition -> value LT value .)


state 49

    (23) identifier -> ID LBR ID RBR .

    ASSIGN          reduce using rule 23 (identifier -> ID LBR ID RBR .)
    SEMICOLON       reduce using rule 23 (identifier -> ID LBR ID RBR .)
    GT              reduce using rule 23 (identifier -> ID LBR ID RBR .)
    LT              reduce using rule 23 (identifier -> ID LBR ID RBR .)
    PLUS            reduce using rule 23 (identifier -> ID LBR ID RBR .)
    MINUS           reduce using rule 23 (identifier -> ID LBR ID RBR .)
    MULT            reduce using rule 23 (identifier -> ID LBR ID RBR .)
    DIV             reduce using rule 23 (identifier -> ID LBR ID RBR .)
    DO              reduce using rule 23 (identifier -> ID LBR ID RBR .)


state 50

    (24) identifier -> ID LBR NUM RBR .

    ASSIGN          reduce using rule 24 (identifier -> ID LBR NUM RBR .)
    SEMICOLON       reduce using rule 24 (identifier -> ID LBR NUM RBR .)
    GT              reduce using rule 24 (identifier -> ID LBR NUM RBR .)
    LT              reduce using rule 24 (identifier -> ID LBR NUM RBR .)
    PLUS            reduce using rule 24 (identifier -> ID LBR NUM RBR .)
    MINUS           reduce using rule 24 (identifier -> ID LBR NUM RBR .)
    MULT            reduce using rule 24 (identifier -> ID LBR NUM RBR .)
    DIV             reduce using rule 24 (identifier -> ID LBR NUM RBR .)
    DO              reduce using rule 24 (identifier -> ID LBR NUM RBR .)


state 51

    (4) declarations -> declarations COMMA ID LBR NUM . COLON NUM RBR

    COLON           shift and go to state 58


state 52

    (6) declarations -> ID LBR NUM COLON NUM . RBR

    RBR             shift and go to state 59


state 53

    (14) expression -> value PLUS value .

    SEMICOLON       reduce using rule 14 (expression -> value PLUS value .)


state 54

    (15) expression -> value MINUS value .

    SEMICOLON       reduce using rule 15 (expression -> value MINUS value .)


state 55

    (16) expression -> value MULT value .

    SEMICOLON       reduce using rule 16 (expression -> value MULT value .)


state 56

    (17) expression -> value DIV value .

    SEMICOLON       reduce using rule 17 (expression -> value DIV value .)


state 57

    (12) command -> WHILE condition DO commands ENDWHILE .

    END             reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    WRITE           reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    READ            reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    WHILE           reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ID              reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ENDWHILE        reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)


state 58

    (4) declarations -> declarations COMMA ID LBR NUM COLON . NUM RBR

    NUM             shift and go to state 60


state 59

    (6) declarations -> ID LBR NUM COLON NUM RBR .

    BEGIN           reduce using rule 6 (declarations -> ID LBR NUM COLON NUM RBR .)
    COMMA           reduce using rule 6 (declarations -> ID LBR NUM COLON NUM RBR .)


state 60

    (4) declarations -> declarations COMMA ID LBR NUM COLON NUM . RBR

    RBR             shift and go to state 61


state 61

    (4) declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .

    BEGIN           reduce using rule 4 (declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .)
    COMMA           reduce using rule 4 (declarations -> declarations COMMA ID LBR NUM COLON NUM RBR .)

